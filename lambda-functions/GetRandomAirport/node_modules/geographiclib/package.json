{
  "name": "geographiclib",
  "version": "1.49.0",
  "description": "JavaScript implementation of geodesic routines in GeographicLib",
  "main": "geographiclib.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://git.code.sourceforge.net/p/geographiclib/code"
  },
  "url": "https://geographiclib.sourceforge.net",
  "keywords": [
    "geodesics",
    "geometry",
    "geographiclib",
    "geography",
    "geodesic problem",
    "direct geodesic problem",
    "inverse geodesic problem",
    "geodesic calculator"
  ],
  "devDependencies": {
    "mocha": "2.3.0"
  },
  "author": {
    "name": "Charles Karney",
    "email": "charles@karney.com"
  },
  "contributors": [
    {
      "name": "Yurij Mikhalevich",
      "email": "0@39.yt"
    }
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://sourceforge.net/p/geographiclib/discussion/",
    "email": "charles@karney.com"
  },
  "readme": "# Geodesic routines from GeographicLib\n\nThis library is a JavaScript implementation of the geodesic routines\nfrom [GeographicLib](https://geographiclib.sourceforge.io).  This solves the\ndirect and inverse geodesic problems for an ellipsoid of revolution.\n\nLicensed under the MIT/X11 License; see\n[LICENSE.txt](https://geographiclib.sourceforge.io/html/LICENSE.txt).\n\n## Installation\n\n```bash\n$ npm install geographiclib\n```\n\n## Usage\n\nIn [node](https://nodejs.org), do\n```javascript\nvar GeographicLib = require(\"geographiclib\");\n```\n\n## Documentation\n\nFull documentation is provided at\n[https://geographiclib.sourceforge.io/1.49/js/](https://geographiclib.sourceforge.io/1.49/js/).\n\n## Examples\n\n```javascript\nvar GeographicLib = require(\"geographiclib\"),\n    geod = GeographicLib.Geodesic.WGS84, r;\n\n// Find the distance from Wellington, NZ (41.32S, 174.81E) to\n// Salamanca, Spain (40.96N, 5.50W)...\nr = geod.Inverse(-41.32, 174.81, 40.96, -5.50);\nconsole.log(\"The distance is \" + r.s12.toFixed(3) + \" m.\");\n// This prints \"The distance is 19959679.267 m.\"\n\n// Find the point 20000 km SW of Perth, Australia (32.06S, 115.74E)...\nr = geod.Direct(-32.06, 115.74, 225, 20000e3);\nconsole.log(\"The position is (\" +\n            r.lat2.toFixed(8) + \", \" + r.lon2.toFixed(8) + \").\");\n// This prints \"The position is (32.11195529, -63.95925278).\"\n```\n\n## Authors\n\n* algorithms + js code: Charles Karney (charles@karney.com)\n* node.js port: Yurij Mikhalevich (0@39.yt)\n",
  "readmeFilename": "README.md",
  "_id": "geographiclib@1.49.0",
  "dist": {
    "shasum": "4ff20eccd3d0ee6435e8f3547de3b667d19233cf"
  },
  "_from": "geographiclib@",
  "_resolved": "https://registry.npmjs.org/geographiclib/-/geographiclib-1.49.0.tgz"
}
